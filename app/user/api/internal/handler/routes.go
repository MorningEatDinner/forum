// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	profile "forum/app/user/api/internal/handler/profile"
	public "forum/app/user/api/internal/handler/public"
	"forum/app/user/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// get user info
				Method:  http.MethodGet,
				Path:    "/detail",
				Handler: profile.DetailHandler(serverCtx),
			},
			{
				// refresh token
				Method:  http.MethodPost,
				Path:    "/refresh-token",
				Handler: profile.RefreshTokenHandler(serverCtx),
			},
			{
				// update user info
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: profile.UpdateInfoHandler(serverCtx),
			},
			{
				// update email
				Method:  http.MethodPost,
				Path:    "/update-email",
				Handler: profile.UpdateEmailHandler(serverCtx),
			},
			{
				// update mobile
				Method:  http.MethodPost,
				Path:    "/update-mobile",
				Handler: profile.UpdateMobileHandler(serverCtx),
			},
			{
				// update password
				Method:  http.MethodPost,
				Path:    "/update-password",
				Handler: profile.UpdatePasswordHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// get captcha
				Method:  http.MethodGet,
				Path:    "/captcha",
				Handler: public.GetCaptchaHandler(serverCtx),
			},
			{
				// check if mobile exists
				Method:  http.MethodGet,
				Path:    "/check-mobile",
				Handler: public.CheckMobileHandler(serverCtx),
			},
			{
				// login
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: public.LoginHandler(serverCtx),
			},
			{
				// get email verification code
				Method:  http.MethodPost,
				Path:    "/email-code",
				Handler: public.GetEmailCodeHandler(serverCtx),
			},
			{
				// get mobile verification code
				Method:  http.MethodPost,
				Path:    "/mobile-code",
				Handler: public.GetMobileCodeHandler(serverCtx),
			},
			{
				// register
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: public.RegisterHandler(serverCtx),
			},
			{
				// register by email
				Method:  http.MethodPost,
				Path:    "/register-by-email",
				Handler: public.RegisterByEmailHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user/v1"),
	)
}
