// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"forum/app/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CaptchaRequest         = pb.CaptchaRequest
	CaptchaResponse        = pb.CaptchaResponse
	CheckMobileRequest     = pb.CheckMobileRequest
	CheckMobileResponse    = pb.CheckMobileResponse
	GenerateTokenReq       = pb.GenerateTokenReq
	GenerateTokenResp      = pb.GenerateTokenResp
	GetMobileCodeRequest   = pb.GetMobileCodeRequest
	GetMobileCodeResponse  = pb.GetMobileCodeResponse
	LoginRequest           = pb.LoginRequest
	LoginResponse          = pb.LoginResponse
	RefreshTokenRequest    = pb.RefreshTokenRequest
	RefreshTokenResponse   = pb.RefreshTokenResponse
	RegisterRequest        = pb.RegisterRequest
	RegisterResponse       = pb.RegisterResponse
	UpdateEmailRequest     = pb.UpdateEmailRequest
	UpdateEmailResponse    = pb.UpdateEmailResponse
	UpdateMobileRequest    = pb.UpdateMobileRequest
	UpdateMobileResponse   = pb.UpdateMobileResponse
	UpdatePasswordRequest  = pb.UpdatePasswordRequest
	UpdatePasswordResponse = pb.UpdatePasswordResponse
	UpdateUserInfoRequest  = pb.UpdateUserInfoRequest
	UpdateUserInfoResponse = pb.UpdateUserInfoResponse
	User                   = pb.User
	UserInfoRequest        = pb.UserInfoRequest
	UserInfoResponse       = pb.UserInfoResponse

	UserService interface {
		CheckMobile(ctx context.Context, in *CheckMobileRequest, opts ...grpc.CallOption) (*CheckMobileResponse, error)
		GetCaptcha(ctx context.Context, in *CaptchaRequest, opts ...grpc.CallOption) (*CaptchaResponse, error)
		GetMobileCode(ctx context.Context, in *GetMobileCodeRequest, opts ...grpc.CallOption) (*GetMobileCodeResponse, error)
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		GenerateToken(ctx context.Context, in *GenerateTokenReq, opts ...grpc.CallOption) (*GenerateTokenResp, error)
		RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error)
		GetUserDetail(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
		UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error)
		UpdateMobile(ctx context.Context, in *UpdateMobileRequest, opts ...grpc.CallOption) (*UpdateMobileResponse, error)
		UpdateEmail(ctx context.Context, in *UpdateEmailRequest, opts ...grpc.CallOption) (*UpdateEmailResponse, error)
		UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) CheckMobile(ctx context.Context, in *CheckMobileRequest, opts ...grpc.CallOption) (*CheckMobileResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.CheckMobile(ctx, in, opts...)
}

func (m *defaultUserService) GetCaptcha(ctx context.Context, in *CaptchaRequest, opts ...grpc.CallOption) (*CaptchaResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetCaptcha(ctx, in, opts...)
}

func (m *defaultUserService) GetMobileCode(ctx context.Context, in *GetMobileCodeRequest, opts ...grpc.CallOption) (*GetMobileCodeResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetMobileCode(ctx, in, opts...)
}

func (m *defaultUserService) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUserService) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserService) GenerateToken(ctx context.Context, in *GenerateTokenReq, opts ...grpc.CallOption) (*GenerateTokenResp, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GenerateToken(ctx, in, opts...)
}

func (m *defaultUserService) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.RefreshToken(ctx, in, opts...)
}

func (m *defaultUserService) GetUserDetail(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.GetUserDetail(ctx, in, opts...)
}

func (m *defaultUserService) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.UpdateUserInfo(ctx, in, opts...)
}

func (m *defaultUserService) UpdateMobile(ctx context.Context, in *UpdateMobileRequest, opts ...grpc.CallOption) (*UpdateMobileResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.UpdateMobile(ctx, in, opts...)
}

func (m *defaultUserService) UpdateEmail(ctx context.Context, in *UpdateEmailRequest, opts ...grpc.CallOption) (*UpdateEmailResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.UpdateEmail(ctx, in, opts...)
}

func (m *defaultUserService) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error) {
	client := pb.NewUserServiceClient(m.cli.Conn())
	return client.UpdatePassword(ctx, in, opts...)
}
