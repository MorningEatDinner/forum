// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.4
// source: app/post/rpc/pb/post.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 基础帖子信息
type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId      int64  `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`           // 帖子ID
	AuthorId    int64  `protobuf:"varint,2,opt,name=authorId,proto3" json:"authorId,omitempty"`       // 作者ID
	CommunityId int64  `protobuf:"varint,3,opt,name=communityId,proto3" json:"communityId,omitempty"` // 社区ID
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`              // 帖子标题
	Content     string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`          // 帖子内容
	CreateTime  string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`    // 创建时间
	UpdatedTime string `protobuf:"bytes,7,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`  // 更新时间
	Score       int64  `protobuf:"varint,8,opt,name=score,proto3" json:"score,omitempty"`             // 帖子分数
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Post) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Post) GetCommunityId() int64 {
	if x != nil {
		return x.CommunityId
	}
	return 0
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Post) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Post) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *Post) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type CreatePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId    int64  `protobuf:"varint,1,opt,name=authorId,proto3" json:"authorId,omitempty"`       // 作者ID
	CommunityId int64  `protobuf:"varint,2,opt,name=communityId,proto3" json:"communityId,omitempty"` // 社区ID
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`              // 帖子标题
	Content     string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`          // 帖子内容
	Score       int64  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`             // 帖子分数
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePostRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CreatePostRequest) GetCommunityId() int64 {
	if x != nil {
		return x.CommunityId
	}
	return 0
}

func (x *CreatePostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatePostRequest) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type CreatePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"` // 创建的帖子ID
}

func (x *CreatePostResponse) Reset() {
	*x = CreatePostResponse{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostResponse) ProtoMessage() {}

func (x *CreatePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostResponse.ProtoReflect.Descriptor instead.
func (*CreatePostResponse) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePostResponse) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetPostDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"` // 帖子ID
}

func (x *GetPostDetailRequest) Reset() {
	*x = GetPostDetailRequest{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostDetailRequest) ProtoMessage() {}

func (x *GetPostDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostDetailRequest.ProtoReflect.Descriptor instead.
func (*GetPostDetailRequest) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{3}
}

func (x *GetPostDetailRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetPostDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"` // 帖子详情
}

func (x *GetPostDetailResponse) Reset() {
	*x = GetPostDetailResponse{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostDetailResponse) ProtoMessage() {}

func (x *GetPostDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostDetailResponse.ProtoReflect.Descriptor instead.
func (*GetPostDetailResponse) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{4}
}

func (x *GetPostDetailResponse) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

type GetPostListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                     // 页码
	PageSize    int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`             // 每页数量
	CommunityId *int64 `protobuf:"varint,3,opt,name=communityId,proto3,oneof" json:"communityId,omitempty"` // 按社区筛选，可选
	AuthorId    *int64 `protobuf:"varint,4,opt,name=authorId,proto3,oneof" json:"authorId,omitempty"`       // 按作者筛选，可选
}

func (x *GetPostListRequest) Reset() {
	*x = GetPostListRequest{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostListRequest) ProtoMessage() {}

func (x *GetPostListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostListRequest.ProtoReflect.Descriptor instead.
func (*GetPostListRequest) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{5}
}

func (x *GetPostListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPostListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPostListRequest) GetCommunityId() int64 {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return 0
}

func (x *GetPostListRequest) GetAuthorId() int64 {
	if x != nil && x.AuthorId != nil {
		return *x.AuthorId
	}
	return 0
}

type GetPostListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总帖子数
	Posts []*Post `protobuf:"bytes,2,rep,name=posts,proto3" json:"posts,omitempty"`  // 帖子列表
}

func (x *GetPostListResponse) Reset() {
	*x = GetPostListResponse{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostListResponse) ProtoMessage() {}

func (x *GetPostListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostListResponse.ProtoReflect.Descriptor instead.
func (*GetPostListResponse) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{6}
}

func (x *GetPostListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPostListResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

// 新增: 根据社区ID获取帖子列表的请求和响应
type GetPostListByCommunityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommunityId int64   `protobuf:"varint,1,opt,name=communityId,proto3" json:"communityId,omitempty"` // 社区ID
	Page        int64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`               // 页码
	PageSize    int64   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页数量
	OrderBy     *string `protobuf:"bytes,4,opt,name=orderBy,proto3,oneof" json:"orderBy,omitempty"`    // 排序方式（可选，默认按创建时间倒序）
}

func (x *GetPostListByCommunityRequest) Reset() {
	*x = GetPostListByCommunityRequest{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostListByCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostListByCommunityRequest) ProtoMessage() {}

func (x *GetPostListByCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostListByCommunityRequest.ProtoReflect.Descriptor instead.
func (*GetPostListByCommunityRequest) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{7}
}

func (x *GetPostListByCommunityRequest) GetCommunityId() int64 {
	if x != nil {
		return x.CommunityId
	}
	return 0
}

func (x *GetPostListByCommunityRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPostListByCommunityRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPostListByCommunityRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type GetPostListByCommunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`             // 该社区的总帖子数
	Posts       []*Post `protobuf:"bytes,2,rep,name=posts,proto3" json:"posts,omitempty"`              // 帖子列表
	CommunityId int64   `protobuf:"varint,3,opt,name=communityId,proto3" json:"communityId,omitempty"` // 社区ID
}

func (x *GetPostListByCommunityResponse) Reset() {
	*x = GetPostListByCommunityResponse{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostListByCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostListByCommunityResponse) ProtoMessage() {}

func (x *GetPostListByCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostListByCommunityResponse.ProtoReflect.Descriptor instead.
func (*GetPostListByCommunityResponse) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{8}
}

func (x *GetPostListByCommunityResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPostListByCommunityResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *GetPostListByCommunityResponse) GetCommunityId() int64 {
	if x != nil {
		return x.CommunityId
	}
	return 0
}

type DeletePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId   int64 `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`     // 要删除的帖子ID
	AuthorId int64 `protobuf:"varint,2,opt,name=authorId,proto3" json:"authorId,omitempty"` // 操作者ID（用于验证权限）
}

func (x *DeletePostRequest) Reset() {
	*x = DeletePostRequest{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRequest) ProtoMessage() {}

func (x *DeletePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRequest.ProtoReflect.Descriptor instead.
func (*DeletePostRequest) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *DeletePostRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type DeletePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 删除是否成功
}

func (x *DeletePostResponse) Reset() {
	*x = DeletePostResponse{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostResponse) ProtoMessage() {}

func (x *DeletePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostResponse.ProtoReflect.Descriptor instead.
func (*DeletePostResponse) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// New messages for UpdatePostScore
type UpdatePostScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"` // 帖子ID
	Score  int64 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`   // 分数更新值
	Up     bool  `protobuf:"varint,3,opt,name=up,proto3" json:"up,omitempty"`
	Down   bool  `protobuf:"varint,4,opt,name=down,proto3" json:"down,omitempty"`
}

func (x *UpdatePostScoreRequest) Reset() {
	*x = UpdatePostScoreRequest{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePostScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostScoreRequest) ProtoMessage() {}

func (x *UpdatePostScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostScoreRequest.ProtoReflect.Descriptor instead.
func (*UpdatePostScoreRequest) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePostScoreRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *UpdatePostScoreRequest) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UpdatePostScoreRequest) GetUp() bool {
	if x != nil {
		return x.Up
	}
	return false
}

func (x *UpdatePostScoreRequest) GetDown() bool {
	if x != nil {
		return x.Down
	}
	return false
}

type UpdatePostScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 更新是否成功
}

func (x *UpdatePostScoreResponse) Reset() {
	*x = UpdatePostScoreResponse{}
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePostScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostScoreResponse) ProtoMessage() {}

func (x *UpdatePostScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_post_rpc_pb_post_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostScoreResponse.ProtoReflect.Descriptor instead.
func (*UpdatePostScoreResponse) Descriptor() ([]byte, []int) {
	return file_app_post_rpc_pb_post_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatePostScoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_app_post_rpc_pb_post_proto protoreflect.FileDescriptor

var file_app_post_rpc_pb_post_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70,
	0x62, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0xe4, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x1e, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22,
	0x9c, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x78,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x64, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x6a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x33, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x32, 0xc6, 0x03, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_post_rpc_pb_post_proto_rawDescOnce sync.Once
	file_app_post_rpc_pb_post_proto_rawDescData = file_app_post_rpc_pb_post_proto_rawDesc
)

func file_app_post_rpc_pb_post_proto_rawDescGZIP() []byte {
	file_app_post_rpc_pb_post_proto_rawDescOnce.Do(func() {
		file_app_post_rpc_pb_post_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_post_rpc_pb_post_proto_rawDescData)
	})
	return file_app_post_rpc_pb_post_proto_rawDescData
}

var file_app_post_rpc_pb_post_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_app_post_rpc_pb_post_proto_goTypes = []any{
	(*Post)(nil),                           // 0: pb.Post
	(*CreatePostRequest)(nil),              // 1: pb.CreatePostRequest
	(*CreatePostResponse)(nil),             // 2: pb.CreatePostResponse
	(*GetPostDetailRequest)(nil),           // 3: pb.GetPostDetailRequest
	(*GetPostDetailResponse)(nil),          // 4: pb.GetPostDetailResponse
	(*GetPostListRequest)(nil),             // 5: pb.GetPostListRequest
	(*GetPostListResponse)(nil),            // 6: pb.GetPostListResponse
	(*GetPostListByCommunityRequest)(nil),  // 7: pb.GetPostListByCommunityRequest
	(*GetPostListByCommunityResponse)(nil), // 8: pb.GetPostListByCommunityResponse
	(*DeletePostRequest)(nil),              // 9: pb.DeletePostRequest
	(*DeletePostResponse)(nil),             // 10: pb.DeletePostResponse
	(*UpdatePostScoreRequest)(nil),         // 11: pb.UpdatePostScoreRequest
	(*UpdatePostScoreResponse)(nil),        // 12: pb.UpdatePostScoreResponse
}
var file_app_post_rpc_pb_post_proto_depIdxs = []int32{
	0,  // 0: pb.GetPostDetailResponse.post:type_name -> pb.Post
	0,  // 1: pb.GetPostListResponse.posts:type_name -> pb.Post
	0,  // 2: pb.GetPostListByCommunityResponse.posts:type_name -> pb.Post
	1,  // 3: pb.PostService.CreatePost:input_type -> pb.CreatePostRequest
	3,  // 4: pb.PostService.GetPostDetail:input_type -> pb.GetPostDetailRequest
	5,  // 5: pb.PostService.GetPostList:input_type -> pb.GetPostListRequest
	7,  // 6: pb.PostService.GetPostListByCommunity:input_type -> pb.GetPostListByCommunityRequest
	9,  // 7: pb.PostService.DeletePost:input_type -> pb.DeletePostRequest
	11, // 8: pb.PostService.UpdatePostScore:input_type -> pb.UpdatePostScoreRequest
	2,  // 9: pb.PostService.CreatePost:output_type -> pb.CreatePostResponse
	4,  // 10: pb.PostService.GetPostDetail:output_type -> pb.GetPostDetailResponse
	6,  // 11: pb.PostService.GetPostList:output_type -> pb.GetPostListResponse
	8,  // 12: pb.PostService.GetPostListByCommunity:output_type -> pb.GetPostListByCommunityResponse
	10, // 13: pb.PostService.DeletePost:output_type -> pb.DeletePostResponse
	12, // 14: pb.PostService.UpdatePostScore:output_type -> pb.UpdatePostScoreResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_app_post_rpc_pb_post_proto_init() }
func file_app_post_rpc_pb_post_proto_init() {
	if File_app_post_rpc_pb_post_proto != nil {
		return
	}
	file_app_post_rpc_pb_post_proto_msgTypes[5].OneofWrappers = []any{}
	file_app_post_rpc_pb_post_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_post_rpc_pb_post_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_post_rpc_pb_post_proto_goTypes,
		DependencyIndexes: file_app_post_rpc_pb_post_proto_depIdxs,
		MessageInfos:      file_app_post_rpc_pb_post_proto_msgTypes,
	}.Build()
	File_app_post_rpc_pb_post_proto = out.File
	file_app_post_rpc_pb_post_proto_rawDesc = nil
	file_app_post_rpc_pb_post_proto_goTypes = nil
	file_app_post_rpc_pb_post_proto_depIdxs = nil
}
