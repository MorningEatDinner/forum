// Code generated by goctl. DO NOT EDIT.
// Source: community.proto

package communityservice

import (
	"context"

	"forum/app/community/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Community                   = pb.Community
	CreateCommunityRequest      = pb.CreateCommunityRequest
	CreateCommunityResponse     = pb.CreateCommunityResponse
	GetAllCommunitiesRequest    = pb.GetAllCommunitiesRequest
	GetAllCommunitiesResponse   = pb.GetAllCommunitiesResponse
	GetCommunityDetailsRequest  = pb.GetCommunityDetailsRequest
	GetCommunityDetailsResponse = pb.GetCommunityDetailsResponse
	GetCommunityPostsRequest    = pb.GetCommunityPostsRequest
	GetCommunityPostsResponse   = pb.GetCommunityPostsResponse
	Post                        = pb.Post
	UpdateCommunityRequest      = pb.UpdateCommunityRequest
	UpdateCommunityResponse     = pb.UpdateCommunityResponse

	CommunityService interface {
		// Public endpoints
		GetAllCommunities(ctx context.Context, in *GetAllCommunitiesRequest, opts ...grpc.CallOption) (*GetAllCommunitiesResponse, error)
		GetCommunityDetails(ctx context.Context, in *GetCommunityDetailsRequest, opts ...grpc.CallOption) (*GetCommunityDetailsResponse, error)
		GetCommunityPosts(ctx context.Context, in *GetCommunityPostsRequest, opts ...grpc.CallOption) (*GetCommunityPostsResponse, error)
		// Admin endpoints
		UpdateCommunity(ctx context.Context, in *UpdateCommunityRequest, opts ...grpc.CallOption) (*UpdateCommunityResponse, error)
		CreateCommunity(ctx context.Context, in *CreateCommunityRequest, opts ...grpc.CallOption) (*CreateCommunityResponse, error)
	}

	defaultCommunityService struct {
		cli zrpc.Client
	}
)

func NewCommunityService(cli zrpc.Client) CommunityService {
	return &defaultCommunityService{
		cli: cli,
	}
}

// Public endpoints
func (m *defaultCommunityService) GetAllCommunities(ctx context.Context, in *GetAllCommunitiesRequest, opts ...grpc.CallOption) (*GetAllCommunitiesResponse, error) {
	client := pb.NewCommunityServiceClient(m.cli.Conn())
	return client.GetAllCommunities(ctx, in, opts...)
}

func (m *defaultCommunityService) GetCommunityDetails(ctx context.Context, in *GetCommunityDetailsRequest, opts ...grpc.CallOption) (*GetCommunityDetailsResponse, error) {
	client := pb.NewCommunityServiceClient(m.cli.Conn())
	return client.GetCommunityDetails(ctx, in, opts...)
}

func (m *defaultCommunityService) GetCommunityPosts(ctx context.Context, in *GetCommunityPostsRequest, opts ...grpc.CallOption) (*GetCommunityPostsResponse, error) {
	client := pb.NewCommunityServiceClient(m.cli.Conn())
	return client.GetCommunityPosts(ctx, in, opts...)
}

// Admin endpoints
func (m *defaultCommunityService) UpdateCommunity(ctx context.Context, in *UpdateCommunityRequest, opts ...grpc.CallOption) (*UpdateCommunityResponse, error) {
	client := pb.NewCommunityServiceClient(m.cli.Conn())
	return client.UpdateCommunity(ctx, in, opts...)
}

func (m *defaultCommunityService) CreateCommunity(ctx context.Context, in *CreateCommunityRequest, opts ...grpc.CallOption) (*CreateCommunityResponse, error) {
	client := pb.NewCommunityServiceClient(m.cli.Conn())
	return client.CreateCommunity(ctx, in, opts...)
}
