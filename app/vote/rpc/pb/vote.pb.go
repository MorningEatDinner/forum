// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.4
// source: app/vote/rpc/pb/vote.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 为帖子投票的请求
type VotePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId   int64 `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`     // 帖子ID
	UserId   int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`     // 用户ID
	VoteType int32 `protobuf:"varint,3,opt,name=voteType,proto3" json:"voteType,omitempty"` // 投票类型 -1: 反对票, 0: 取消投票, 1: 赞成票
}

func (x *VotePostRequest) Reset() {
	*x = VotePostRequest{}
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VotePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePostRequest) ProtoMessage() {}

func (x *VotePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePostRequest.ProtoReflect.Descriptor instead.
func (*VotePostRequest) Descriptor() ([]byte, []int) {
	return file_app_vote_rpc_pb_vote_proto_rawDescGZIP(), []int{0}
}

func (x *VotePostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *VotePostRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VotePostRequest) GetVoteType() int32 {
	if x != nil {
		return x.VoteType
	}
	return 0
}

// 为帖子投票的响应
type VotePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 投票是否成功
}

func (x *VotePostResponse) Reset() {
	*x = VotePostResponse{}
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VotePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePostResponse) ProtoMessage() {}

func (x *VotePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePostResponse.ProtoReflect.Descriptor instead.
func (*VotePostResponse) Descriptor() ([]byte, []int) {
	return file_app_vote_rpc_pb_vote_proto_rawDescGZIP(), []int{1}
}

func (x *VotePostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 获取用户投票记录的请求
type GetUserVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"` // 帖子ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"` // 用户ID
}

func (x *GetUserVoteRequest) Reset() {
	*x = GetUserVoteRequest{}
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserVoteRequest) ProtoMessage() {}

func (x *GetUserVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserVoteRequest.ProtoReflect.Descriptor instead.
func (*GetUserVoteRequest) Descriptor() ([]byte, []int) {
	return file_app_vote_rpc_pb_vote_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserVoteRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *GetUserVoteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取用户投票记录的响应
type GetUserVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteRecord int64 `protobuf:"varint,1,opt,name=voteRecord,proto3" json:"voteRecord,omitempty"` // 用户的投票记录
}

func (x *GetUserVoteResponse) Reset() {
	*x = GetUserVoteResponse{}
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserVoteResponse) ProtoMessage() {}

func (x *GetUserVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_vote_rpc_pb_vote_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserVoteResponse.ProtoReflect.Descriptor instead.
func (*GetUserVoteResponse) Descriptor() ([]byte, []int) {
	return file_app_vote_rpc_pb_vote_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserVoteResponse) GetVoteRecord() int64 {
	if x != nil {
		return x.VoteRecord
	}
	return 0
}

var File_app_vote_rpc_pb_vote_proto protoreflect.FileDescriptor

var file_app_vote_rpc_pb_vote_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70,
	0x62, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0x5d, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x2c, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x44, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x32, 0x88, 0x01, 0x0a, 0x0b, 0x56,
	0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x56, 0x6f,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6f,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_vote_rpc_pb_vote_proto_rawDescOnce sync.Once
	file_app_vote_rpc_pb_vote_proto_rawDescData = file_app_vote_rpc_pb_vote_proto_rawDesc
)

func file_app_vote_rpc_pb_vote_proto_rawDescGZIP() []byte {
	file_app_vote_rpc_pb_vote_proto_rawDescOnce.Do(func() {
		file_app_vote_rpc_pb_vote_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_vote_rpc_pb_vote_proto_rawDescData)
	})
	return file_app_vote_rpc_pb_vote_proto_rawDescData
}

var file_app_vote_rpc_pb_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_app_vote_rpc_pb_vote_proto_goTypes = []any{
	(*VotePostRequest)(nil),     // 0: pb.VotePostRequest
	(*VotePostResponse)(nil),    // 1: pb.VotePostResponse
	(*GetUserVoteRequest)(nil),  // 2: pb.GetUserVoteRequest
	(*GetUserVoteResponse)(nil), // 3: pb.GetUserVoteResponse
}
var file_app_vote_rpc_pb_vote_proto_depIdxs = []int32{
	0, // 0: pb.VoteService.VotePost:input_type -> pb.VotePostRequest
	2, // 1: pb.VoteService.GetUserVote:input_type -> pb.GetUserVoteRequest
	1, // 2: pb.VoteService.VotePost:output_type -> pb.VotePostResponse
	3, // 3: pb.VoteService.GetUserVote:output_type -> pb.GetUserVoteResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_app_vote_rpc_pb_vote_proto_init() }
func file_app_vote_rpc_pb_vote_proto_init() {
	if File_app_vote_rpc_pb_vote_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_vote_rpc_pb_vote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_vote_rpc_pb_vote_proto_goTypes,
		DependencyIndexes: file_app_vote_rpc_pb_vote_proto_depIdxs,
		MessageInfos:      file_app_vote_rpc_pb_vote_proto_msgTypes,
	}.Build()
	File_app_vote_rpc_pb_vote_proto = out.File
	file_app_vote_rpc_pb_vote_proto_rawDesc = nil
	file_app_vote_rpc_pb_vote_proto_goTypes = nil
	file_app_vote_rpc_pb_vote_proto_depIdxs = nil
}
