name: build-community-api  # 工作流的名称，表示构建社区API
on:  # 触发工作流的事件
  push:  # 当有代码推送时触发
    branches:  # 指定触发的分支
      - "main"  # 仅在推送至main分支时触发
    paths:  # 指定触发的文件路径
      - 'app/community/api/**'  # 仅在app/community/api目录下的文件有变动时触发

env:  # 环境变量
  DOCKERHUB_USERNAME: morningeatdinner  # Docker Hub用户名

jobs:  # 定义工作流中的任务
  docker:  # 任务的名称
    runs-on: ubuntu-latest  # 任务运行的操作系统，这里是Ubuntu的最新版本
    permissions:  # 设置任务的权限
      contents: read  # 允许读取仓库内容
      packages: write  # 允许写入包（例如Docker镜像）
    
    steps:  # 任务中的步骤
      - name: Checkout  # 步骤名称，表示检出代码
        uses: actions/checkout@v3  # 使用actions/checkout@v3动作来检出代码
        with:  # 配置动作的参数
          fetch-depth: 0  # 获取完整的提交历史
      
      - name: Set outputs  # 步骤名称，表示设置输出变量
        id: vars  # 步骤的唯一标识符
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT  # 运行命令，获取当前提交的短SHA并将其保存到GITHUB_OUTPUT中
      
      - name: Set up QEMU  # 步骤名称，表示设置QEMU
        uses: docker/setup-qemu-action@v2  # 使用docker/setup-qemu-action@v2动作来设置QEMU
      
      - name: Pull goctl  # 步骤名称，表示拉取goctl镜像
        run: docker pull kevinwan/goctl  # 运行命令，拉取kevinwan/goctl镜像
      
      - name: Create community Dockerfile  # 步骤名称，表示创建社区API的Dockerfile
        run: |  # 运行多行命令
          # 获取当前用户ID和组ID
          CURRENT_UID=$(id -u)
          CURRENT_GID=$(id -g)
          
          # 确保当前目录有正确的权限
          chmod -R 755 .
          
          # 使用当前用户权限运行goctl
          docker run --user $CURRENT_UID:$CURRENT_GID \
            -v ${PWD}:/forum \
            -w /forum/app/community/api \
            kevinwan/goctl docker \
            -go ./community.go

      - name: Set up Docker Buildx  # 步骤名称，表示设置Docker Buildx
        uses: docker/setup-buildx-action@v2  # 使用docker/setup-buildx-action@v2动作来设置Docker Buildx
      
      - name: Login to Docker Hub  # 步骤名称，表示登录到Docker Hub
        uses: docker/login-action@v2  # 使用docker/login-action@v2动作来登录Docker Hub
        with:  # 配置动作的参数
          username: ${{ env.DOCKERHUB_USERNAME }}  # Docker Hub用户名
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Docker Hub的访问令牌，从GitHub Secrets中获取
      
      - name: Build community and push  # 步骤名称，表示构建社区API镜像并推送
        run: |  # 运行多行命令
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/community-api:${{ steps.vars.outputs.sha_short }} -f ./app/community/api/Dockerfile .  # 构建Docker镜像，标签为Docker Hub用户名/community-api:短SHA
          docker push ${{ env.DOCKERHUB_USERNAME }}/community-api:${{ steps.vars.outputs.sha_short }}  # 推送构建好的Docker镜像到Docker Hub